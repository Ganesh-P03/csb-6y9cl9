{"version":3,"sources":["App.js","index.js"],"names":["App","useState","attempts","setAttempts","guesses","setGuesses","guessed","setGuessed","guessResult","setGuessResult","winOrloose","setwinorLoose","isOver","setIsOver","Math","floor","random","randomNum","className","disabled","type","value","onChange","e","target","onClick","console","log","Number","rootElement","document","getElementById","createRoot","render"],"mappings":"mKAGe,SAASA,IACtB,MAA8BC,mBAAS,MAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,MAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAsCN,mBAAS,MAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAAoCR,mBAAS,MAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACA,EAA4BV,oBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAAkCZ,mBAChCa,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GADpC,mBAAOC,EAAP,UA6BA,OACE,sBAAKC,UAAU,MAAf,UACE,6CAAgBD,KAChB,8BACE,0CAAa,GAAKb,EAAlB,eAEA,uBACEe,SAAUP,EACVQ,KAAK,SACLC,MAAOf,EACPgB,SAAU,SAACC,GACThB,EAAWgB,EAAEC,OAAOH,UAIxB,wBAAQI,QAtCd,WACEtB,EAAaD,GAAQ,WAAQI,IAC7BoB,QAAQC,WAAWrB,EAAU,WAAaW,GAEtCW,OAAOtB,KAAaW,GACtBR,EAAe,8BACfE,EAAc,OACdE,GAAU,IAEDe,OAAOtB,GAAWW,EAC3BR,EAAe,+BAEfA,EAAe,6BAGjBJ,EAAWD,EAAU,GACrBG,EAAW,IACK,KAAZH,GACFO,EAAc,SAoBZ,uBAGF,8BACE,4BAAIT,IACJ,4BAAIM,OAGN,4BAAIE,OCzDV,IAAMmB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACjC,EAAD,S","file":"static/js/main.5e83d582.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState } from \"react\";\n\nexport default function App() {\n  let [attempts, setAttempts] = useState(null);\n  const [guesses, setGuesses] = useState(0);\n  const [guessed, setGuessed] = useState(null);\n  const [guessResult, setGuessResult] = useState(null);\n  const [winOrloose, setwinorLoose] = useState(null);\n  const [isOver, setIsOver] = useState(false);\n  const [randomNum, setRandomNum] = useState(\n    Math.floor(Math.random() * 100) + 1\n  );\n\n  function setGameOver() {}\n\n  function checkGuess() {\n    setAttempts((attempts += ` ${guessed}`));\n    console.log(typeof guessed + \" \" + typeof randomNum);\n\n    if (Number(guessed) === randomNum) {\n      setGuessResult(\"Congratulations !!!!!!!!!!\");\n      setwinorLoose(\"Win\");\n      setIsOver(true);\n      setGameOver();\n    } else if (Number(guessed) > randomNum) {\n      setGuessResult(\"guessed number is too high!\");\n    } else {\n      setGuessResult(\"guessed number is too low\");\n    }\n\n    setGuesses(guesses + 1);\n    setGuessed(\"\");\n    if (guesses === 10) {\n      setwinorLoose(\"lost\");\n      setGameOver();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>GUESS GAME {randomNum}</h1>\n      <p>\n        <p>You have {10 - guesses} guesses </p>\n\n        <input\n          disabled={isOver}\n          type=\"number\"\n          value={guessed}\n          onChange={(e) => {\n            setGuessed(e.target.value);\n          }}\n        />\n\n        <button onClick={checkGuess}>submit</button>\n      </p>\n\n      <p>\n        <p>{attempts}</p>\n        <p>{guessResult}</p>\n      </p>\n\n      <p>{winOrloose}</p>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}